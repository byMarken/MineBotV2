from aiogram import Router, types, F
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import StatesGroup, State
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from typing import Dict, Callable

from bot.keyboards.play_menu import create_play_menu
from bot.services.bet_manager import bet_manager  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π —ç–∫–∑–µ–º–ø–ª—è—Ä bet_manager

router = Router()

def create_bet_menu() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[
            [KeyboardButton(text="10$"), KeyboardButton(text="20$"), KeyboardButton(text="50$")],
            [KeyboardButton(text="100$"), KeyboardButton(text="200$"), KeyboardButton(text="500$")],
            [KeyboardButton(text="üî¢ –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é")]
        ],
        resize_keyboard=True
    )

class CustomBetState(StatesGroup):
    waiting_for_bet = State()

# –•–µ–Ω–¥–ª–µ—Ä: –≤—ã–±–æ—Ä —Å—Ç–∞–≤–∫–∏ (–æ—Ç–∫—Ä—ã—Ç–∏–µ –º–µ–Ω—é)
@router.message(F.text.startswith("üíµ –°—Ç–∞–≤–∫–∞"))
async def choose_bet(message: types.Message):
    await message.answer(
        "üí∞ –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—É—é —Å—Ç–∞–≤–∫—É:",
        reply_markup=create_bet_menu()
    )

# –•–µ–Ω–¥–ª–µ—Ä: –≤—ã–±–æ—Ä —Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏
@router.message(F.text.in_(["10$", "20$", "50$", "100$", "200$", "500$"]))
async def set_bet(message: types.Message):
    user_id = message.from_user.id
    new_bet = int(message.text.replace("$", ""))
    bet_manager.set_bet(user_id, new_bet)
    await message.answer(
        f"‚úÖ –°—Ç–∞–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {new_bet}$",
        reply_markup=create_play_menu(user_id)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é —Å–ª–æ—Ç–æ–≤
    )

# –•–µ–Ω–¥–ª–µ—Ä: —Ä—É—á–Ω–æ–π –≤–≤–æ–¥
@router.message(F.text == "üî¢ –í–≤–µ—Å—Ç–∏ –≤—Ä—É—á–Ω—É—é")
async def ask_custom_bet(message: types.Message, state: FSMContext):
    await state.set_state(CustomBetState.waiting_for_bet)
    await message.answer("‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É —Å—Ç–∞–≤–∫–∏:", reply_markup=create_bet_menu())

# –•–µ–Ω–¥–ª–µ—Ä: —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Ä—É—á–Ω—É—é –≤–≤–µ–¥—ë–Ω–Ω–æ–π —Å—Ç–∞–≤–∫–∏
@router.message(CustomBetState.waiting_for_bet)
async def set_custom_bet(message: types.Message, state: FSMContext):
    try:
        bet = int(message.text)  # —Ç—É—Ç –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å "$"
        if bet <= 0:
            raise ValueError
    except ValueError:
        await message.answer("‚ùå –í–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —Ü–µ–ª–æ–µ —á–∏—Å–ª–æ –±–æ–ª—å—à–µ 0.")
        return

    user_id = message.from_user.id
    bet_manager.set_bet(user_id, bet)

    await message.answer(
        f"‚úÖ –°—Ç–∞–≤–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {bet}$",
        reply_markup=create_play_menu(user_id)  # –≤–æ–∑–≤—Ä–∞—â–∞–µ–º –º–µ–Ω—é
    )

    await state.clear()
