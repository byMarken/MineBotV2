import asyncio
from aiogram import Router, F, types
from aiogram.enums.dice_emoji import DiceEmoji
from functools import lru_cache
from typing import List

router = Router()

# –°–ø–∏—Å–æ–∫ —Å–∏–º–≤–æ–ª–æ–≤ Telegram Dice –ø–æ –∏–Ω–¥–µ–∫—Å–∞–º 0‚Äì3
SYMBOLS = ["BAR", "üçá", "üçã", "7Ô∏è‚É£"]  # –ò–Ω–¥–µ–∫—Å—ã: 0, 1, 2, 3


@lru_cache(maxsize=64)
def get_combo_parts(dice_value: int) -> List[str]:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–º–±–∏–Ω–∞—Ü–∏—é –∏–∑ 3 —Å–∏–º–≤–æ–ª–æ–≤ –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é Telegram Dice (–≤ –ø–æ—Ä—è–¥–∫–µ left ‚Üí center ‚Üí right).
    """
    dice_value -= 1  # –ü—Ä–∏–≤–æ–¥–∏–º –∫ –¥–∏–∞–ø–∞–∑–æ–Ω—É 0‚Äì63
    result = []

    for _ in range(3):
        result.append(SYMBOLS[dice_value % 4])
        dice_value //= 4

    return result


@lru_cache(maxsize=64)
def get_combo_text(dice_value: int, l10n=None) -> str:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É "—Å–∏–º–≤–æ–ª | —Å–∏–º–≤–æ–ª | —Å–∏–º–≤–æ–ª" –ø–æ –∑–Ω–∞—á–µ–Ω–∏—é –∫—É–±–∏–∫–∞.
    """
    parts = get_combo_parts(dice_value)
    if l10n:
        parts = [l10n.format_value(p) for p in parts]
    return " | ".join(parts)


@lru_cache(maxsize=64)
def get_score_change(dice_value: int) -> int:
    """
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–Ω–æ–∂–∏—Ç–µ–ª—å –≤—ã–∏–≥—Ä—ã—à–∞ (0, 5, 7, 10) –ø–æ –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏ —Å–∏–º–≤–æ–ª–æ–≤.
    """
    dice_value -= 1
    first = dice_value % 4
    second = (dice_value // 4) % 4
    third = (dice_value // 16) % 4

    if first == second == third == 3:
        return 10  # üéâ –¢—Ä–∏ —Å–µ–º–µ—Ä–∫–∏
    elif (first == second == 3) or (second == third == 3) or (first == third == 3):
        return 5  # –î–≤–µ —Å–µ–º—ë—Ä–∫–∏
    elif first == second == third:
        return 7  # –¢—Ä–∏ –æ–¥–∏–Ω–∞–∫–æ–≤—ã—Ö
    else:
        return 0


@router.message(F.text == "üé∞ –ö—Ä—É—Ç–∏—Ç—å —Å–ª–æ—Ç—ã")
async def slot_spin(message: types.Message):
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–ª–æ—Ç–æ–≤—ã–π –∫—É–±–∏–∫ (—Å –∞–Ω–∏–º–∞—Ü–∏–µ–π)
    dice_msg = await message.answer_dice(emoji=DiceEmoji.SLOT_MACHINE)

    # –ñ–¥—ë–º –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏ (–ø—Ä–∏–º–µ—Ä–Ω–æ 4 —Å–µ–∫—É–Ω–¥—ã)
    await asyncio.sleep(3)

    value = dice_msg.dice.value
    combo = get_combo_text(value)
    multiplier = get_score_change(value)
    bet = 10
    win = bet * multiplier

    await message.answer(
        f"üé∞ –í–∞—à–∞ –∫–æ–º–±–∏–Ω–∞—Ü–∏—è: {combo}\n"
        f"–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞: {bet}$\n"
        f"–í—ã–∏–≥—Ä—ã—à: {win}$"
    )
